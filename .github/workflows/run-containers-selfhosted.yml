name: Brizy Free Sefl-Hosted

on:
  push:
    branches:
      - master
jobs:
  base:
    environment: Build
    runs-on: self-hosted
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
        with:
          path: main

      - name: Load Build Evnrorment Data
        uses: falti/dotenv-action@master
        id: env
        with:
          path: main/.github/.build-env

      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Checkout BB
        uses: actions/checkout@v2
        with:
          repository: bagrinsergiu/BB
          ssh-key: ${{ secrets.ACCESS_KEY }}
          path: bb
          submodules: 'recursive'
          fetch-depth: '1'

      - name: Change submodule branches
        id: change-branches-on-bb
        shell: bash
        run: |
          cd bb/editor && git fetch origin ${EDITOR_BRANCH} &&  git checkout origin/${EDITOR_BRANCH}
          cd bb/worpdress/www/wp-content/plugins/brizy && git fetch origin ${FREE_BRANCH} &&  git checkout ${FREE_BRANCH}
          cd bb/worpdress/www/wp-content/plugins/brizy-pro && git fetch origin ${PRO_BRANCH} && git checkout ${PRO_BRANCH}

#      - name: Build mysql image
#        id: build-mysql-image
#        shell: bash
#        run: |
#          mysqlContainerName="testing-mysql-${BUILD_ENVIRONMENT}"
#          brizyMysqlImage="brizy/testing-mysql:${BUILD_ENVIRONMENT}"
#          dbName="brizy-${target}"
#          docker stop "${mysqlContainerName}" || true
#          docker build -t "${brizyMysqlImage}" --target build-deployment bb/mysql
#          docker run -d --rm --network="traefik" \
#                          --network-alias="${mysqlContainerName}" \
#                          --name="${mysqlContainerName}" \
#                          --cpus=3 \
#                          --memory=2g \
#                          -e "MAX_CPUS=3" \
#                          -e "MYSQL_ROOT_PASSWORD=nopassword" \
#                          -e "MYSQL_DATABASE=${dbName}" \
#                          -e "MYSQL_USER=brizy" \
#                          -e "MYSQL_PASSWORD=nopassword" \
#                         "${brizyMysqlImage}"

#      - name: Build wordpress image
#        id: build-wordpress-image
#        shell: bash
#        run: |
#          mysqlContainerName="testing-mysql-${BUILD_ENVIRONMENT}"
#          brizyMysqlImage="brizy/testing-mysql:${BUILD_ENVIRONMENT}"
#          dbName="brizy-${target}"
#          docker stop "${mysqlContainerName}" || true
#          docker build -t "${brizyMysqlImage}" --target build-deployment bb/mysql
#          docker run -d --rm --network="${network}" \
#          --network-alias="${wpContainerName}" \
#          --name="${wpContainerName}" \
#          --cpus=2 \
#          --memory=2g \
#          -e "MAX_CPUS=2" \
#          -e "WORDPRESS_DB_HOST=${mysqlContainerName}" \
#          -e "WORDPRESS_DB_USER=root" \
#          -e "WORDPRESS_DB_PASSWORD=nopassword" \
#          -e "WORDPRESS_DB_NAME=${dbName}" \
#          -e "WORDPRESS_DEBUG=1" \
#          -e "APP_ENV=dev" \
#          -e "EDITOR_HOST=${editorContainerName}:3000" \
#          -e "COMPILER_HOST=${compilerContainerName}:5000" \
#          -e "STATIC_HOST=${bitbloxDomain}:8080" \
#          -e "COMPILER_DOWNLOAD_HOST=${wpContainerName}" \
#          -e "WORDPRESS_CONFIG_EXTRA=
#          define('FS_METHOD', 'direct');
#          define( 'WP_HOME', 'http://${domainName}:8080/' );
#          define( 'WP_SITEURL', 'http://${domainName}:8080/' ); " \
#          --label "traefik.docker.network"="${network}" \
#          --label "traefik.enable"="true" \
#          --label "traefik.frontend.rule"="Host:${domainName}" \
#          --label "traefik.port"="80" \
#          "${brizyWordpressImage}"





#      - name: Intialize  the  containers
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.KEY }}
#          port: ${{ secrets.PORT }}
#          command_timeout: 200m
#          passphrase: ${{ secrets.KEY_PASSPHRASE }}
#          script: |
#            ./BB/build/run-editor-instance.sh \
#            -c ${{ steps.vars.outputs.sha_short }} \
#            -v ${{ steps.env.outputs.build_environment }} \
#            -f ${{ steps.env.outputs.free_branch }} \
#            -p ${{ steps.env.outputs.pro_branch }} \
#            -e ${{ steps.env.outputs.editor_branch }} \
#            -n traefik \
#            -t ${{ secrets.COMPOSER_TOKEN }}
#      - name: Clean context folder
#        uses: appleboy/ssh-action@master
#        if: ${{ always() }}
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.KEY }}
#          port: ${{ secrets.PORT }}
#          command_timeout: 200m
#          passphrase: ${{ secrets.KEY_PASSPHRASE }}
#          script:
#            ./BB/build/clean-context-folder.sh -c ${{ steps.vars.outputs.sha_short }}
