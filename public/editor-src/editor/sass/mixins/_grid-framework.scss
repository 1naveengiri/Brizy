// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.
@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints, $prefix: false) {
  $breakpoint-counter: 0;

  @each $breakpoint in map-keys($breakpoints) {
    $breakpoint-counter: ($breakpoint-counter + 1);

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      @if $enable-flex {
        @if $prefix {
          .#{$prefix}-col-#{$breakpoint} {
            position: relative;
            flex-basis: 0%;
            flex-grow: 1;
            max-width: 100%;
            min-height: 1px;
            padding-right: ($gutter / 2);
            padding-left: ($gutter / 2);
          }
        } @else {
          .col-#{$breakpoint} {
            position: relative;
            flex-basis: 0%;
            flex-grow: 1;
            max-width: 100%;
            min-height: 1px;
            padding-right: ($gutter / 2);
            padding-left: ($gutter / 2);
          }
        }
      }

      @for $i from 1 through $columns {
        @if $prefix {
          .#{$editor-prefix}-col-#{$breakpoint}-#{$i} {
            @include make-col($i, $columns, $gutter);
          }
        } @else {
          .col-#{$breakpoint}-#{$i} {
            @include make-col($i, $columns, $gutter);
          }
        }
      }
    }
  }
}

@mixin make-flex-grid-columns($grid-columns: $grid-columns-cloneable, $breakpoints: $grid-breakpoints) {
  @each $breakpoint in map-keys($breakpoints) {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      @for $i from 1 through $grid-columns {
        .grid-#{$breakpoint}-#{$i} > [class^="col-"],
        .grid-#{$breakpoint}-#{$i} > [class*=" col-"] {
          flex-basis: percentage(1 / $i);
          width: percentage(1 / $i);
        }
      }
    }
  }
}
